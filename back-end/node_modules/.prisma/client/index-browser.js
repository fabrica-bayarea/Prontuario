
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  role: 'role',
  name: 'name',
  email: 'email',
  userName: 'userName',
  passwordHash: 'passwordHash',
  authProvider: 'authProvider',
  isVerified: 'isVerified',
  CreatedAt: 'CreatedAt',
  updatedAt: 'updatedAt',
  providerId: 'providerId',
  isAdmin: 'isAdmin'
};

exports.Prisma.BoardScalarFieldEnum = {
  id: 'id',
  ownerId: 'ownerId',
  title: 'title',
  description: 'description',
  visibility: 'visibility',
  isArchived: 'isArchived',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BoardMemberScalarFieldEnum = {
  boardId: 'boardId',
  userId: 'userId',
  role: 'role',
  joinedAt: 'joinedAt'
};

exports.Prisma.ListScalarFieldEnum = {
  id: 'id',
  boardId: 'boardId',
  title: 'title',
  position: 'position',
  isArchived: 'isArchived',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TaskScalarFieldEnum = {
  id: 'id',
  listId: 'listId',
  creatorId: 'creatorId',
  title: 'title',
  description: 'description',
  position: 'position',
  status: 'status',
  dueDate: 'dueDate',
  isArchived: 'isArchived',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LabelScalarFieldEnum = {
  id: 'id',
  boardId: 'boardId',
  name: 'name',
  color: 'color',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TaskLabelScalarFieldEnum = {
  taskId: 'taskId',
  labelId: 'labelId'
};

exports.Prisma.DashboardScalarFieldEnum = {
  id: 'id',
  cursos: 'cursos',
  programas: 'programas',
  usuarios: 'usuarios',
  atendimentosMes: 'atendimentosMes'
};

exports.Prisma.PendenciaScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao',
  dashboardId: 'dashboardId'
};

exports.Prisma.NotificacaoScalarFieldEnum = {
  id: 'id',
  mensagem: 'mensagem',
  dashboardId: 'dashboardId'
};

exports.Prisma.GraficoCursoScalarFieldEnum = {
  id: 'id',
  label: 'label',
  valor: 'valor',
  dashboardId: 'dashboardId'
};

exports.Prisma.GraficoBeneficiarioScalarFieldEnum = {
  id: 'id',
  label: 'label',
  valor: 'valor',
  dashboardId: 'dashboardId'
};

exports.Prisma.CursoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  descricao: 'descricao',
  modalidade: 'modalidade',
  criadoEm: 'criadoEm'
};

exports.Prisma.CoordenadorScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email',
  telefone: 'telefone',
  cpf: 'cpf',
  status: 'status',
  cursos: 'cursos',
  criadoEm: 'criadoEm',
  atualizadoEm: 'atualizadoEm',
  permissoes: 'permissoes'
};

exports.Prisma.AgendamentoScalarFieldEnum = {
  id: 'id',
  beneficiario: 'beneficiario',
  programa: 'programa',
  tipo: 'tipo',
  aluno: 'aluno',
  data: 'data',
  turno: 'turno',
  status: 'status',
  criadoEm: 'criadoEm'
};

exports.Prisma.ProgramaAgendamentoScalarFieldEnum = {
  id: 'id',
  nome: 'nome'
};

exports.Prisma.TipoAtendimentoAgendamentoScalarFieldEnum = {
  id: 'id',
  nome: 'nome'
};

exports.Prisma.AlunoScalarFieldEnum = {
  id: 'id',
  nome: 'nome'
};

exports.Prisma.TipoAtendimentoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  sigla: 'sigla',
  descricao: 'descricao',
  publico: 'publico',
  duracao: 'duracao',
  frequencia: 'frequencia',
  visibilidade: 'visibilidade',
  instrucoesAluno: 'instrucoesAluno',
  orientacoesPublicas: 'orientacoesPublicas',
  status: 'status',
  programaId: 'programaId'
};

exports.Prisma.ProgramaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  descricao: 'descricao',
  tipo: 'tipo',
  status: 'status',
  sala: 'sala',
  inicio: 'inicio',
  fim: 'fim',
  curso: 'curso',
  assistentes: 'assistentes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EscalaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  matricula: 'matricula',
  curso: 'curso',
  status: 'status',
  turnos: 'turnos',
  programaId: 'programaId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  MEMBER: 'MEMBER',
  OBSERVER: 'OBSERVER'
};

exports.AuthProvider = exports.$Enums.AuthProvider = {
  local: 'local',
  google: 'google',
  microsoft: 'microsoft'
};

exports.BoardVisibility = exports.$Enums.BoardVisibility = {
  PUBLIC: 'PUBLIC',
  PRIVATE: 'PRIVATE',
  TEAM: 'TEAM'
};

exports.Visibilidade = exports.$Enums.Visibilidade = {
  ALUNO_E_BENEFICIARIO: 'ALUNO_E_BENEFICIARIO',
  SOMENTE_ALUNO: 'SOMENTE_ALUNO',
  SOMENTE_COORDENADOR: 'SOMENTE_COORDENADOR'
};

exports.Prisma.ModelName = {
  User: 'User',
  Board: 'Board',
  BoardMember: 'BoardMember',
  List: 'List',
  Task: 'Task',
  Label: 'Label',
  TaskLabel: 'TaskLabel',
  Dashboard: 'Dashboard',
  Pendencia: 'Pendencia',
  Notificacao: 'Notificacao',
  GraficoCurso: 'GraficoCurso',
  GraficoBeneficiario: 'GraficoBeneficiario',
  Curso: 'Curso',
  coordenador: 'coordenador',
  Agendamento: 'Agendamento',
  ProgramaAgendamento: 'ProgramaAgendamento',
  TipoAtendimentoAgendamento: 'TipoAtendimentoAgendamento',
  Aluno: 'Aluno',
  TipoAtendimento: 'TipoAtendimento',
  Programa: 'Programa',
  Escala: 'Escala'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
